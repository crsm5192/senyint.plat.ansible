- name: add group for php
  group: 
    name: '{{pl_group}}' 
    gid:  '{{pl_gid}}'

- name: add user for php
  user: 
    name:  '{{pl_user}}'
    group: '{{pl_group}}'    
    uid:   '{{pl_uid}}' 
    home:  '{{pl_home}}' 
    shell: /bin/bash

- name: make floder for use 
  file: 
    path:  '{{item.path}}' 
    owner: '{{item.owner}}' 
    group: '{{item.group}}' 
    mode: 0755 
    state: directory
  with_items:
    - { path: '{{pl_deploy_home}}', owner: 'root',group: 'root' }
    - { path: '{{pl_home}}',        owner: '{{pl_user}}',group: '{{pl_group}}' }
    - { path: '{{pl_home}}/php/tmp',owner: '{{pl_user}}',group: '{{pl_group}}' }
    - { path: '{{pl_home}}/php/log',owner: '{{pl_user}}',group: '{{pl_group}}' }    
    - { path: '{{pl_home}}/php/run',owner: '{{pl_user}}',group: '{{pl_group}}' }

- name: check jemalloc
  shell: ls /usr/local/lib/libjemalloc.so.2
  ignore_errors: yes
  register: jemalloc_status

- import_tasks: make_jemalloc.yml
  when: jemalloc_status is failed 
    
- name: extract php source packages
  unarchive: src='{{item.src}}' dest='{{item.dest}}'
  with_items:
    - { src: 'php-{{pl_php_version}}.tar.gz',dest: '{{pl_deploy_home}}' }

- name: php_compile_str
  set_fact:
    php_compile_str: "{{ php_compile_str | default('') }} {{ '--with-' + item.option + '=' + item.value }}"
  with_items:
    - "{{ php_compile }}"   
   
- name: php_mode1
  set_fact:
    php_mode1_str: "{{ php_mode1_str | default('') }} {{ '--with-' + item }}"
  with_items:
    - "{{ php_mode1 }}"    

- name: php_mode2
  set_fact:
    php_mode2_str: "{{ php_mode2_str | default('') }} {{ '--enable-' + item }}"
  with_items:
    - "{{ php_mode2 }}"
    
- name: configure php 
  command: ./configure --prefix={{pl_home}}/php {{ php_compile_str }} {{ php_mode1_str }} {{ php_mode2_str }}
  args:
    chdir: '{{pl_deploy_home}}/php-{{pl_php_version}}'

- name: make php
  make:
    chdir: '{{pl_deploy_home}}/php-{{pl_php_version}}'
    target: install
    params:
      NUM_THREADS: 4
 
- name: config php
  template: src='{{item.src}}' dest='{{item.dest}}'
  with_items:
    - { src: 'php.conf.j2',       dest: '{{pl_home}}/php/etc/php-fpm.conf' }
    - { src: 'php.ini.j2',        dest: '{{pl_home}}/php/etc/php.ini' }
    - { src: 'enable-php.conf.j2',dest: '{{pl_home}}/nginx/conf/enable-php.conf' }
    
- name: fire wall php
  firewalld: port={{pl_php_port}}/tcp permanent=true state=enabled
  
- name: change floder owner
  file: path='{{pl_home}}/php' owner='{{pl_user}}' group='{{pl_group}}' recurse=yes  
    
- name: start php
  systemd: name='{{item.name}}' state='{{item.state}}' enabled=yes
  with_items:
    - { name: 'firewalld',state: 'reloaded' }
    - { name: 'php-fpm',  state: 'started' }
#check dscore
- name: check dscore
  stat: 
    path: '{{home}}/dscore'
  #ignore_errors: yes
  register: dscore_status
#check nginx
- name: check nginx
  stat: 
    path: '{{home}}/nginx'
  #ignore_errors: yes
  register: nginx_status
#check mysql 
- name: check mysql 
  stat: 
    path: '{{home}}/mysql'
  #ignore_errors: yes
  register: mysql_status
#check redis 
- name: check redis 
  stat: 
    path: '{{home}}/redis'
  #ignore_errors: yes
  register: redis_status
#check kafka 
- name: check kafka 
  stat: 
    path: '{{home}}/kafka'
  #ignore_errors: yes
  register: kafka_status
#check zookeeper 
- name: check zookeeper 
  stat: 
    path: '{{home}}/zookeeper'
  #ignore_errors: yes
  register: zookeeper_status

#config dscore 
- name: zabbix-dscore
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/tomcat.conf.j2',dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/tomcat.conf' }
    - { src: 'scripts/tomcat.py.j2', dest: '{{pl_mon_home}}/zabbix/etc/scripts/tomcat/tomcat.py' }
  when: dscore_status.stat.exists
#config nginx  
- name: zabbix-nginx
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/nginx.conf.j2', dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/nginx.conf' }
    - { src: 'scripts/nginx.py.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/nginx/nginx.py' }
  when: nginx_status.stat.exists 
#config mysql  
- name: zabbix-mysql 
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/mysql.conf.j2',      dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/mysql.conf' }
    - { src: 'scripts/mysql_func.py.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/mysql/mysql_func.py' }
    - { src: 'scripts/mysql_perf.py.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/mysql/mysql_perf.py' }
    - { src: 'scripts/mysql_status.py.j2',dest: '{{pl_mon_home}}/zabbix/etc/scripts/mysql/mysql_status.py' }
  when: mysql_status.stat.exists  
#config redis  
- name: zabbix-redis 
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/redis.conf.j2',     dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/redis.conf' }
    #- { src: 'scripts/.redis.passwd.j2', dest: '{{pl_mon_home}}/zabbix/etc/scripts/redis/.redis.passwd' }
    - { src: 'scripts/redis.py.j2',      dest: '{{pl_mon_home}}/zabbix/etc/scripts/redis/redis.py' }
  when: redis_status.stat.exists  
#config kafka  
- name: zabbix-kafka 
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/kafka.conf.j2', dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/kafka.conf' }
    - { src: 'scripts/kafka.sh.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/kafka/kafka.sh' }
  when: kafka_status.stat.exists
#config zookeeper  
- name: zabbix-zookeeper 
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/zookeeper.conf.j2', dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/zookeeper.conf' }
    - { src: 'scripts/zookeeper.sh.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/zookeeper/zookeeper.sh' }
  when: zookeeper_status.stat.exists  
#config jvm
- name: zabbix-jvm 
  template:
    src:  '{{item.src}}'
    dest: '{{item.dest}}'
    owner: '{{pl_zbx_user}}'
    group: '{{pl_zbx_group}}'
  with_items:
    - { src: 'config/jvm.conf.j2', dest: '{{pl_mon_home}}/zabbix/etc/zabbix_agentd.conf.d/jvm.conf' }
    - { src: 'scripts/jvm.py.j2',  dest: '{{pl_mon_home}}/zabbix/etc/scripts/jvm/jvm.py' }
  when: zookeeper_status.stat.exists or kafka_status.stat.exists or dscore_status.stat.exists
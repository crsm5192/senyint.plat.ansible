# 日志系统专用
info_host:{{pl_ds_mysql_server}}
#info_host:172.16.140.226
info_port:{{pl_ds_mysql_port}}
info_product:mysql

# --------------------------------------------------------------------------------
# DruidDataSource配置属性列表 https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
# --------------------------------------------------------------------------------
# 配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。如果没有配置，将会生成一个名字，格式是："DataSource-" + System.identityHashCode(this). 
# 缺省值 null
name:DataSource-MySQL
# 连接数据库的url，不同数据库不一样
# 缺省值 null
url:jdbc:mysql://{{pl_ds_mysql_server}}:{{pl_ds_mysql_port}}/a297dfacd7a84eab9656675f61750078?zeroDateTimeBehavior=convertToNull
#url:jdbc:mysql://172.16.140.226:33066/a297dfacd7a84eab9656675f61750078?zeroDateTimeBehavior=convertToNull
# 这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
# 缺省值 根据url自动识别
driverClassName:com.mysql.jdbc.Driver
# 连接数据库的用户名
# 缺省值 null
username:{{pl_ds_mysql_db_user}}
# 连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter
# 缺省值 null
password:{{pl_ds_mysql_db_pwd}}
# 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
# 缺省值 null
#filters:stat,wall
filters:stat
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
# 缺省值 0
initialSize:50
# 最小连接池数量
# 缺省值 null
minIdle:10
# 最大连接池数量
# 缺省值 8
maxActive:500
# 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明。
# 缺省值 1分钟
timeBetweenEvictionRunsMillis:60000
# 连接保持空闲而不被驱逐的最长时间
# 缺省值 30分钟
minEvictableIdleTimeMillis:300000
# 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
# 缺省值 null
validationQuery:SELECT 'x'
# 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
# 缺省值 null
validationQueryTimeout:7200
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
# 缺省值 false
testWhileIdle:true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
# 缺省值 true
testOnBorrow:false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
# 缺省值 false
testOnReturn:false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。分库分表较多的数据库，建议配置为false。
# 缺省值 false
poolPreparedStatements:false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
# 缺省值 -1
#maxOpenPreparedStatements:100

#\u5BF9\u4E8E\u957F\u65F6\u95F4\u4E0D\u4F7F\u7528\u7684\u8FDE\u63A5\u5F3A\u5236\u5173\u95ED
removeAbandoned:true
#\u8D85\u8FC730\u5206\u949F\u5F00\u59CB\u5173\u95ED\u7A7A\u95F2\u8FDE\u63A5
removeAbandonedTimeout:1800
#\u5C06\u5F53\u524D\u5173\u95ED\u52A8\u4F5C\u8BB0\u5F55\u5230\u65E5\u5FD7
logAbandoned:false
